"""
The main file of this project. All the rules will be imported from seperate files.
Goal: 
    Create a de novo assembly from paired end sequences with quality assesments
Author: 
    Mark van de Streek
Date: 
    2024-03-16
Copyright: 
    BFV3 2023-2024

Run pipeline:
snakemake -c 1 --use-conda --conda-frontend conda
"""

configfile: "config/config.yaml",
workdir: config['workdir'],

rule all:
    input:
        expand("results/fastqc/{sample}_1_fastqc.html", sample=config['samples']),
        expand("results/fastqc/{sample}_2_fastqc.html", sample=config['samples']),
        expand("results/fastx/filtered_{sample}_1.fastq", sample=config['samples']),
        expand("results/fastx/filtered_{sample}_2.fastq", sample=config['samples']),

        # expand("aligned_{sample}_1.fastq", sample=config['samples']),
        # expand("aligned_{sample}_2.fastq", sample=config['samples']),

        nonRNA=expand("results/sortmerna/{sample}_non_rRNA.fq", sample=config['samples']),
        alignedRNA=expand("results/sortmerna/{sample}_rRNA.fq", sample=config['samples']),

        # expand("results/trimmomatic/{sample}_1_paired_trimmed.fastq", sample=config['samples']),
        # expand("results/trimmomatic/{sample}_2_paired_trimmed.fastq", sample=config['samples']),
        # expand("results/trimmomatic/{sample}_1_unpaired_trimmed.fastq", sample=config['samples']),
        # expand("results/trimmomatic/{sample}_2_unpaired_trimmed.fastq", sample=config['samples'])

rule fastQC:
    input:
        config["samples_directory"] + "{sample}_1.fastq",
        config["samples_directory"] + "{sample}_2.fastq"
    output:
        "results/fastqc/{sample}_1_fastqc.html",
        "results/fastqc/{sample}_1_fastqc.zip",
        "results/fastqc/{sample}_2_fastqc.html",
        "results/fastqc/{sample}_2_fastqc.zip",
    message:
        "Running FastQC on {input}"
    conda:
        "../envs/FASTQC.yaml"
    params:
        threads=config['threads']
    shell:
        "fastqc -t {params.threads} {input} -o results/fastqc/"

rule fastx_toolkit:
    """
    This tool has verbose specified, but runs first all operations, 
    and then prints the output.
    """
    input:
        s1=config["samples_directory"] + "{sample}_1.fastq",
        s2=config["samples_directory"] + "{sample}_2.fastq"
    output:
        s1="results/fastx/filtered_{sample}_1.fastq",
        s2="results/fastx/filtered_{sample}_2.fastq"
    message:
        "Running fastx_toolkit on {input}"
    conda:
        "../envs/FASTX_TOOLKIT.yaml"
    shell:
        """
        fastq_quality_filter -v -q 20 -p 75 -i {input.s1} -o {output.s1}
        fastq_quality_filter -v -q 20 -p 75 -i {input.s2} -o {output.s2}
        """

rule trimmomatic_pe:
    input:
        r1="results/fastx/filtered_{sample}_1.fastq",
        r2="results/fastx/filtered_{sample}_2.fastq"
    output:
        r1="results/trimmomatic/{sample}_1_paired_trimmed.fastq",
        r2="results/trimmomatic/{sample}_2_paired_trimmed.fastq",
        r1_unpaired="results/trimmomatic/{sample}_1_unpaired_trimmed.fastq",
        r2_unpaired="results/trimmomatic/{sample}_2_unpaired_trimmed.fastq"
    log:
        "logs/trimmomatic/{sample}.log"
    params:
        trimmer=["ILLUMINACLIP:../envs/trimmomatic-0.39/adapters/TruSeq3-PE.fa:2:30:10", "SLIDINGWINDOW:5:20", "LEADING:5", "TRAILING:5", "MINLEN:50"],
        extra="",
        compression_level="-9"
    threads: 16
    resources:
        mem_mb=1024
    wrapper:
        "v3.5.2/bio/trimmomatic/pe"

rule mergeFastQ:
    input:
        r1="results/trimmomatic/{sample}_1_paired_trimmed.fastq",
        r2="results/trimmomatic/{sample}_2_paired_trimmed.fastq"
    output:
        "results/sortmerna/{sample}_interleaved.fastq"
    shell:
        "workflow/scripts/merge-paired-reads.sh {input.r1} {input.r2} {output}"

rule sortMeRNA:
    input:
        ref1="/homes/mvandestreek/sortmerna/rRNA_databases/silva-bac-16s-id90.fasta",
        ref2="/homes/mvandestreek/sortmerna/rRNA_databases/silva-arc-16s-id95.fasta",
        ref3="/homes/mvandestreek/sortmerna/rRNA_databases/silva-arc-23s-id98.fasta",
        sample="results/sortmerna/{sample}_interleaved.fastq",
    output:
        nonRNA="results/sortmerna/{sample}_non_rRNA.fq",
        alignedRNA="results/sortmerna/{sample}_rRNA.fq",
        #
        # PROBLEM: Tool has standard as output .fq, but when I say output is .fq, 
        # Output is .fq.fq. So I need to change the output to .fq, but then the
        # output is not recognized as a file.
        #
    conda:
        "../envs/sortmerna.yaml",
    log:
        "logs/sortmerna/{sample}.log",
    shell:
        """
        rm -rf /homes/mvandestreek/sortmerna/run/kvdb/*
        sortmerna --reads {input.sample} --ref {input.ref1} --ref {input.ref2} --ref {input.ref3} --num_alignments 1 --fastx --aligned {output.alignedRNA} --other {output.nonRNA} -a 8 -m 64000 --paired_in -v
        mv {output.alignedRNA}.fq {output.alignedRNA} &&
        mv {output.nonRNA}.fq {output.nonRNA}
        """

# rule sortmerna_pe:
#     input:
#         ref=["/homes/mvandestreek/sortmerna/rRNA_databases/silva-bac-16s-id90.fasta", "/homes/mvandestreek/sortmerna/rRNA_databases/silva-bac-23s-id98.fasta",
#              "/homes/mvandestreek/sortmerna/rRNA_databases/silva-arc-16s-id95.fasta", "/homes/mvandestreek/sortmerna/rRNA_databases/silva-arc-23s-id98.fasta",
#              "/homes/mvandestreek/sortmerna/rRNA_databases/silva-euk-18s-id95.fasta", "/homes/mvandestreek/sortmerna/rRNA_databases/silva-euk-28s-id98.fasta",
#              "/homes/mvandestreek/sortmerna/rRNA_databases/rfam-5s-database-id98.fasta", "/homes/mvandestreek/sortmerna/rRNA_databases/rfam-5.8s-database-id98.fasta"],
        
#         reads = ["results/trimmomatic/{sample}_1_paired_trimmed.fastq",
#                 "results/trimmomatic/{sample}_2_paired_trimmed.fastq"],
#     output:
#         aligned=["aligned_{sample}_1.fastq", "aligned_{sample}_2.fastq"],
#         other=["unpaired_{sample}_1.fastq", "unpaired_{sample}_2.fastq"],
#         stats="sortmerna_pe_stats_{sample}.log",
#     params:
#         extra="--num_alignments 1 --fastx --log -m 64000 --paired_in -v",
#     threads: 16
#     resources:
#         mem_mb=3072,  # amount of memory for building the index
#     log:
#         "logs/sortmerna/reads_pe_{sample}.log",
#     benchmark:
#         "benchmarks/sortmerna/reads_pe_{sample}.txt",
#     wrapper:
#         "v3.5.3/bio/sortmerna"
