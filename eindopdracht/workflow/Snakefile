"""
The main file of this project. All the rules will be imported from seperate files.
Goal: 
    Create a de novo assembly from paired end sequences with quality assesments
Author: 
    Mark van de Streek
Date: 
    2024-03-16
Copyright: 
    BFV3 2023-2024

Run pipeline:
snakemake -c 1 --use-conda --conda-frontend conda
"""

configfile: "config/config.yaml",
workdir: config['workdir'],

rule all:
    input:
        expand("results/fastqc/{sample}_fastqc.html", sample=config['samples']),
        expand("results/fastx/filtered_{sample}.fastq", sample=config['samples']),

rule fastQC:
    input:
        config["samples_directory"] + "{sample}.fastq",
    output:
        "results/fastqc/{sample}_fastqc.html",
        "results/fastqc/{sample}_fastqc.zip",
    message:
        "Running FastQC on {input}"
    conda:
        "../envs/FASTQC.yaml"
    params:
        threads=config['threads']
    shell:
        "fastqc -t {params.threads} {input} -o results/fastqc/"

rule fastx_toolkit:
    """
    This tool has verbose specified, but runs first all operations, 
    and then prints the output.
    """
    input:
        config["samples_directory"] + "{sample}.fastq"
    output:
        "results/fastx/filtered_{sample}.fastq"
    message:
        "Running fastx_toolkit on {input}"
    conda:
        "../envs/FASTX_TOOLKIT.yaml"
    shell:
        "fastq_quality_filter -v -q 20 -p 75 -i {input} -o {output}"

