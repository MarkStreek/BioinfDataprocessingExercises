"""
Snakefile where you can find the first simple workflow pipeline. 
This pipeline is composed of multiple rules. See the
"""

sample = ["A", "B", "C"]
path = "/Users/mvandestreek/data"

rule all:
    input:
        "../results/all.vcf"
    message:
        "Starting the pipeline!"

rule bwa_map:
    input:
        path + "/genome.fa", 
        path + "/samples/{sample}.fastq"
    output:
        "../resources/mapped_reads/{sample}.bam"
    message:
        "Mapping the reads using bwa."
    shell:
        "bwa mem {input} | samtools view -Sb - > {output}"

rule samtools_sort:
    input:
        "../resources/mapped_reads/{sample}.bam"
    output:
        "../resources/sorted_reads/{sample}.bam"
    message:
        "Sorting the mapped reads."
    shell:
        "samtools sort -T sorted_reads/{wildcards.sample} "
        "-O bam {input} > {output}"

rule samtools_index:
    input:
        "../resources/sorted_reads/{sample}.bam"
    output:
        "../resources/sorted_reads/{sample}.bam.bai"
    message:
        "Indexing the sorted bam file."
    shell:
        "samtools index {input}"

rule bcftools_call:
    input:
        fa = path + "/genome.fa",
        bam = expand("../resources/sorted_reads/{sample}.bam", sample=sample),
        bai = expand("../resources/sorted_reads/{sample}.bam.bai", sample=sample)
    output:
        "../results/all.vcf"
    message:
        "Calling the variants using bcftools."
    shell:
        "bcftools mpileup -f {input.fa} {input.bam} | "
        "bcftools call -mv - > {output}"

rule create_dag:
    output:
        "../images/dag.svg"
    message:
        "Create a DAG of the pipeline"
    shell:
        "snakemake --dag | dot -Tsvg > {output}"